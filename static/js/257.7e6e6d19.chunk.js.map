{"version":3,"file":"static/js/257.7e6e6d19.chunk.js","mappings":"2IAwBA,IAtBe,WACb,OACE,gBACEA,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,OAAQ,OACRC,UAAW,UALf,UAQE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,OACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,yLCpBYC,EAAiBC,EAAAA,GAAAA,IAAH,yEAKdC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iiCAiCVG,EAAQH,EAAAA,GAAAA,IAAH,mN,sCCkElB,EAnGqB,WAAO,IAAD,IACzB,GAAkCI,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAqBhD,OAnBAC,EAAAA,EAAAA,YAAU,WACRX,GAAa,GACb,IACE,IAAMY,EAAQ,mCAAG,WAAMT,GAAN,yFACQU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,8CADR,gBACPW,EADO,EACPA,KAIRhB,EAAagB,GALE,2CAAH,sDAOdF,EAAST,EAMV,CALC,MAAOY,GACPb,GAAW,GACXJ,EAAa,CAAC,EACf,CAZD,QAaEE,GAAa,EACd,CACF,GAAE,CAACG,KAGF,2BACGJ,IAAa,SAACiB,EAAA,EAAD,IACbf,GAAWgB,IAAAA,OAAAA,QAAwB,2BACpC,UAACxB,EAAD,CAAYyB,GAAIX,EAASY,QAAzB,WACE,SAAC,MAAD,IAA+B,YAEjC,UAAC5B,EAAD,YACE,0BACE,SAACI,EAAD,CACEyB,IACEvB,EAAUwB,YAAV,0CACuCxB,EAAUwB,aAC7C,oIAENC,IAAKzB,EAAU0B,WAGnB,4BACE,wBAAK1B,EAAU0B,SACf,yBAAG,YAAU1B,EAAU2B,iBACvB,0BAAI,WAAS3B,EAAU4B,iBACvB,wBAAI,YACH5B,EAAU6B,QACT7B,EAAU6B,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC5B,OAAO,4BAAgBD,EAAK,OAAVC,EACnB,KACH,cAAGlD,MAAO,CAAEmD,SAAU,SAAtB,SAAkCjC,EAAUkC,YAC5C,eACEpD,MAAO,CACLqD,UAAW,OACXpD,QAAS,QAHb,SAMGiB,EAAUoC,sBACTpC,EAAUoC,qBAAqBN,KAAI,YAA8B,IAA3BO,EAA0B,EAA1BA,UAAWN,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACrD,OACE,yBACE,0BACE,gBACElD,MAAO,CACLK,OAAQ,OACRC,MAAO,OACPH,OAAQ,OACRkD,UAAW,QAEbZ,IACEc,EAAS,0CAC8BA,GACnC,oIAENZ,IAAKM,OAdFC,EAmBZ,aAIT,iBAAKlD,MAAO,CAAEwD,cAAe,IAA7B,WACE,SAAC1C,EAAD,CAAYyB,GAAIrB,EAAUuC,SAA1B,SAAoC,oBACpC,SAAC3C,EAAD,CAAYyB,GAAG,OAAf,SAAsB,UACtB,SAACzB,EAAD,CAAYyB,GAAG,UAAf,SAAyB,gBAE3B,SAAC,EAAAmB,SAAD,CAAUC,UAAU,SAACtB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        margin: 'auto',\n        textAlign: 'center',\n      }}\n    >\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"blue\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 50px;\n  margin: 40px;\n`;\nexport const StyledLink = styled(Link)`\n  font-size: 1rem;\n  margin: 40px;\n  padding: 10px;\n  background: #3f51b5;\n  color: #ffffff;\n  text-decoration: none;\n\n  box-shadow: 0 0px 0px hsla(190deg, 15%, 5%, 0.2);\n  transfrom: translateY(0);\n  border-top-left-radius: 0px;\n  border-top-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n  border-bottom-right-radius: 0px;\n\n  transition: border-top-left-radius 0.15s 0.15s ease-out,\n    border-top-right-radius 0.15s calc(0.15s * 2) ease-out,\n    border-bottom-right-radius 0.15s calc(0.15s * 3) ease-out,\n    border-bottom-left-radius 0.15s calc(0.15s * 4) ease-out,\n    box-shadow calc(0.15s * 4) ease-out, transform calc(0.15s * 4) ease-out,\n    background calc(0.15s * 4) steps(4, jump-end);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 4px 8px hsla(190deg, 15%, 5%, 0.2);\n    transform: translateY(-4px);\n    background: hsl(230deg, 50%, 45%);\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n  }\n`;\nexport const Image = styled.img`\n  width: 360px;\n  height: 100%;\n  background-size: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n    cursor: auto;\n  }\n`;\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport { StyledLink, MovieContainer, Image } from './MovieDetails.styled';\nimport { PiArrowCounterClockwiseBold } from 'react-icons/pi';\nimport Notiflix from 'notiflix';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const pathBack = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      const fetchFoo = async movieId => {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=ac5224eaea5eecab8d1620632b5b6c95`\n        );\n\n        setMovieInfo(data);\n      };\n      fetchFoo(movieId);\n    } catch (error) {\n      setIsError(true);\n      setMovieInfo({});\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {isError && Notiflix.Notify.warning('Something went wrong! ')}\n      <StyledLink to={pathBack.current}>\n        <PiArrowCounterClockwiseBold /> Back\n      </StyledLink>\n      <MovieContainer>\n        <div>\n          <Image\n            src={\n              movieInfo.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`\n                : 'https://st2.depositphotos.com/4323461/9818/v/450/depositphotos_98187808-stock-illustration-oops-problem-man-business-concept.jpg}'\n            }\n            alt={movieInfo.title}\n          />\n        </div>\n        <div>\n          <h2>{movieInfo.title}</h2>\n          <p>Release: {movieInfo.release_date}</p>\n          <h3>Rating: {movieInfo.vote_average}</h3>\n          <h3>Genre: </h3>\n          {movieInfo.genres &&\n            movieInfo.genres.map(({ name, id }) => {\n              return <span key={id}>{name}, </span>;\n            })}\n          <p style={{ maxWidth: '600px' }}>{movieInfo.overview}</p>\n          <ul\n            style={{\n              listStyle: 'none',\n              display: 'flex',\n            }}\n          >\n            {movieInfo.production_companies &&\n              movieInfo.production_companies.map(({ logo_path, name, id }) => {\n                return (\n                  <li key={id}>\n                    <div>\n                      <img\n                        style={{\n                          height: '30px',\n                          width: 'auto',\n                          margin: '10px',\n                          listStyle: 'none',\n                        }}\n                        src={\n                          logo_path\n                            ? `https://image.tmdb.org/t/p/w500/${logo_path}`\n                            : 'https://st2.depositphotos.com/4323461/9818/v/450/depositphotos_98187808-stock-illustration-oops-problem-man-business-concept.jpg}'\n                        }\n                        alt={name}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </MovieContainer>\n      <div style={{ paddingBottom: 40 }}>\n        <StyledLink to={movieInfo.homepage}>Movie Homepage</StyledLink>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["style","display","alignItems","margin","textAlign","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieContainer","styled","StyledLink","Link","Image","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","isError","setIsError","movieId","useParams","location","useLocation","pathBack","useRef","state","from","useEffect","fetchFoo","axios","data","error","Loader","Notiflix","to","current","src","poster_path","alt","title","release_date","vote_average","genres","map","name","id","maxWidth","overview","listStyle","production_companies","logo_path","paddingBottom","homepage","Suspense","fallback"],"sourceRoot":""}