{"version":3,"file":"static/js/736.fd33c08c.chunk.js","mappings":"gSAEaA,EAAWC,EAAAA,GAAAA,GAAH,2RAaRC,EAAWD,EAAAA,GAAAA,GAAH,yMAORE,EAAQF,EAAAA,GAAAA,IAAH,4O,SCkDlB,EAjEa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA+BR,OArBAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACb,IACE,IAAMM,EAAQ,mCAAG,WAAMH,GAAN,yFAGLI,EAAAA,EAAAA,IAAA,6CAC8BJ,EAD9B,sDAHK,gBAELN,EAFK,EAEbW,KAAQX,KAKVC,EAAuBD,EAlBhBY,KAAI,kBAAiD,CAC9DC,QADa,EAAGA,QAEhBC,UAFa,EAAYA,UAGzBC,KAHa,EAAuBA,KAIpCC,aAJa,EAA6BA,aAA7B,KAWI,2CAAH,sDASdP,EAASH,EAMV,CALC,MAAOW,GACPZ,GAAW,GACXJ,EAAQ,CAAC,EACV,CAdD,QAeEE,GAAa,EACd,CACF,GAAE,CAACG,KAGF,gCACGJ,IAAa,SAACgB,EAAA,EAAD,IACbd,GAAWe,IAAAA,OAAAA,QAAwB,2BACpC,SAACxB,EAAD,UACGK,EAAKoB,OAAS,EACbpB,EAAKY,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpC,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEL,EAAY,0CAC2BA,GACnC,oIAENM,IAAKP,KAEP,wBAAKA,KACL,uBAAID,MAVSD,EAalB,KAED,uBAAG,gBAKZ,C,6CC9CD,IAtBe,WACb,OACE,gBACEU,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,OAAQ,OACRC,UAAW,UALf,UAQE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,OACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 40px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 80%;\n  height: 380px;\n  object-fit: cover;\n  background-size: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport { CastList, CastItem, Image } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { movieId } = useParams();\n  const normalizedCast = arr => {\n    return arr.map(({ cast_id, character, name, profile_path }) => ({\n      cast_id,\n      character,\n      name,\n      profile_path,\n    }));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      const fetchFoo = async movieId => {\n        const {\n          data: { cast },\n        } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=ac5224eaea5eecab8d1620632b5b6c95`\n        );\n\n        setCast(normalizedCast(cast));\n      };\n      fetchFoo(movieId);\n    } catch (error) {\n      setIsError(true);\n      setCast({});\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isError && Notiflix.Notify.warning('Something went wrong! ')}\n      <CastList>\n        {cast.length > 0 ? (\n          cast.map(({ cast_id, character, name, profile_path }) => {\n            return (\n              <CastItem key={cast_id}>\n                <Image\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://st2.depositphotos.com/4323461/9818/v/450/depositphotos_98187808-stock-illustration-oops-problem-man-business-concept.jpg}'\n                  }\n                  alt={name}\n                />\n                <h2>{name}</h2>\n                <p>{character}</p>\n              </CastItem>\n            );\n          })\n        ) : (\n          <p>Oooops!</p>\n        )}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        margin: 'auto',\n        textAlign: 'center',\n      }}\n    >\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"blue\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n"],"names":["CastList","styled","CastItem","Image","useState","cast","setCast","isLoading","setIsLoading","isError","setIsError","movieId","useParams","useEffect","fetchFoo","axios","data","map","cast_id","character","name","profile_path","error","Loader","Notiflix","length","src","alt","style","display","alignItems","margin","textAlign","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}